
name: CodeQL-Analysis

on:
  workflow_call:
    inputs:
      config-file:
        required: false
        type: string
        description: "The path to the CodeQL configuration file"
      build-config:
        required: false
        type: string
        description: "The build command to execute"
    outputs:
      score:
        description: "Total score"
        value: ${{ jobs.run-codeql.outputs.score }}

jobs:
  get-languages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check Inputs
        id: check-inputs
        run: |
          if [ -n "${{ inputs.languages }}" ] && [ -n "${{ inputs.build-config }}" ]; then
            echo "Both 'languages' and 'build-config' cannot be provided at the same time."
            exit 1
          elif [ -z "${{ inputs.languages }}" ] && [ -z "${{ inputs.build-config }}" ]; then
            echo "Either 'languages' or 'build-config' must be provided."
            exit 1
          fi

      - name: Set Languages or Build Config
        id: set-matrix
        run: |
          if [ -n "${{ inputs.languages }}" ]; then
            languages_json=$(echo "${{ inputs.languages }}" | awk '{$1=$1};1' | jq -R -s -c 'split("\n") | map(select(length > 0))')
            echo "matrix={\"language\":$languages_json}" >> $GITHUB_OUTPUT
          else
            if [ -f "${{ inputs.build-config }}" ]; then
              cat "${{ inputs.build-config }}" > formatted-build-config.json
            else
              echo '${{ inputs.build-config }}' > build-config.json
              jq '.' build-config.json > formatted-build-config.json
            fi
            cat formatted-build-config.json
            echo "matrix=$(jq -c '{ include: . }' formatted-build-config.json)" >> $GITHUB_OUTPUT
            echo "$matrix"
            echo "$formatted-build-config.json"
          fi

  run-codeql:
    needs: get-languages
    runs-on: ${{ (matrix.language == 'swift' && fromJSON('[ "ubuntu-latest", "macOS" ]')) || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    outputs:
      score: ${{ steps.parse-sarif.outputs.score }}
    permissions:
      security-events: write
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.get-languages.outputs.matrix) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK
        if: matrix.language == 'java'
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        if: matrix.language != 'java'
        uses: github/codeql-action/autobuild@v3

      - name: Setup Java
        if: matrix.language == 'java'
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Perform CodeQL Analysis
        id: run-codeql
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
          output: sarif

      - name: Parse SARIF
        id: parse-sarif
        run: |
          score=$(jq '.runs[].results | length' codeql.sarif)
          echo "::set-output name=score::$score"
