name: CodeQL-Analysis

on:
  workflow_call:
    inputs:
      severity_threshold:
        description: 'Threshold for severity levels (e.g., critical, high, medium, low)'
        required: true
        default: 'high'
        type: string

      score_threshold:
        description: 'Threshold for number of allowed issues'
        required: true
        default: 10
        type: string

jobs:
  identify-languages:
    runs-on: ubuntu-latest
    outputs:
      languages: ${{ steps.list-languages.outputs.languages }}
    steps:
      - uses: austenstone/list-repository-languages@main
        id: list-languages
        with:
          codeql: 'true'

  run-codeql:
    needs: identify-languages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: ${{ fromJSON(needs.identify-languages.outputs.languages) }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: ${{ matrix.language }}

      - name: Upload Sarif Report to Workflow
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ${{ github.workspace }}/codeql-sarif/${{ matrix.language }}.sarif

  Detect-Errors:
    needs: [identify-languages, run-codeql]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: ${{ fromJSON(needs.identify-languages.outputs.languages) }}
    steps:
    - name: Download Sarif Report
      uses: actions/download-artifact@v2
      with:
        name: sarif-report-${{ matrix.language }}

    - name: Detect Errors
      run: |
        repo=$(echo ${{ github.repository }} | awk -F'/' '{print $2}')
        results=$(cat $repo/results/${{ matrix.language }}-builtin.sarif | jq -r '.runs[].results[].ruleId')

        resultsArray=($results)
        
        echo "${resultsArray[*]}"

        errorCount=0
        warningCount=0
        noteCount=0

        for var in "${resultsArray[@]}"
        do
          severity=$(cat $repo/results/${{ matrix.language }}-builtin.sarif | jq -r '.runs[].tool.driver.rules[] | select(.id=="'$var'").properties."problem.severity"')
          echo "${var} | $severity"
          if [ "$severity" == "warning" ]; then let warningCount+=1; fi
          if [ "$severity" == "error" ]; then let errorount+=1; fi
          if [ "$severity" == "note" ]; then let noteount+=1; fi
        done

        echo ""
        echo "Error Count: $errorCount"
        echo "Warning Count: $warningCount"
        echo "Note Count: $noteCount"
        echo ""

        if (( $errorCount > 0 )); then
            echo "errors found - failing detect error check..."
            exit -1
        fi

        if (( $warningCount > 0 )); then
            echo "warnings found - failing detect warning check..."
            exit -1
        fi