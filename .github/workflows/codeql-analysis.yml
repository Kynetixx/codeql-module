name: CodeQL-Analysis

on:
  workflow_call:
    outputs:
      score:
        description: "Total score"
        value: ${{ jobs.run-codeql.outputs.score }}

jobs:
  identify-languages:
    runs-on: ubuntu-latest
    outputs:
      languages: ${{ steps.filter_languages.outputs.filtered_languages }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get languages
        uses: octokit/request-action@v2.x
        id: get_languages
        with:
          route: GET /repos/{owner}/{repo}/languages
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Define language mapping and filter languages
        id: filter_languages
        uses: actions/github-script@v6
        with:
          script: |
            const languageMapping = {
              "c": "cpp",
              "go": "go",
              "java": "java",
              "javascript": "javascript",
              "typescript": "typescript",
              "python": "python",
              "ruby": "ruby",
              "swift": "swift",
              "objective-c": "cpp"
            };

            const languagesData = JSON.parse(process.env.LANGUAGES_DATA);
            const languages = Object.keys(languagesData).map(lang => lang.toLowerCase().trim());
            const filteredLanguages = [...new Set(languages.map(lang => languageMapping[lang]).filter(Boolean))];

            core.setOutput('filtered_languages', JSON.stringify(filteredLanguages));
        env:
          LANGUAGES_DATA: ${{ steps.get_languages.outputs.data }}

  run-codeql:
    needs: identify-languages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: ${{ fromJson(needs.identify-languages.outputs.languages) }}
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Custom Build for Swift
        if: matrix.language == 'swift'
        run: |
          echo "Running custom build steps for Swift"
          # Add your custom build steps for Swift here
          # Example:
          # swift build

      - name: Autobuild
        if: matrix.language != 'swift'
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        id: run-codeql
        uses: github/codeql-action/analyze@v3
        with:
          category: ${{ matrix.language }}
          output: sarif

      - name: Parse SARIF and Compute Vulnerability Score
        id: parse-sarif
        run: |
          results_path=$(echo ${{ steps.run-codeql.outputs.sarif }} | jq -r '.["results.sarif"]')

          critical=$(jq '[.runs[].results[] | select(.properties["security-severity"] >= 9)] | length' $results_path)
          high=$(jq '[.runs[].results[] | select(.properties["security-severity"] >= 7 and .properties["security-severity"] < 9)] | length' $results_path)
          medium=$(jq '[.runs[].results[] | select(.properties["security-severity"] >= 4 and .properties["security-severity"] < 7)] | length' $results_path)
          low=$(jq '[.runs[].results[] | select(.properties["security-severity"] >= 0.1 and .properties["security-severity"] < 4)] | length' $results_path)

          base_score=100
          score=$((base_score - (critical * 5) - (high * 4) - (medium * 3) - (low * 2)))

          echo "Critical: $critical"
          echo "High: $high"
          echo "Medium: $medium"
          echo "Low: $low"
          echo "Vulnerability Score: $score"

          echo "score=$score" >> $GITHUB_OUTPUT

          echo "## CodeQL Vulnerability Score" >> $GITHUB_STEP_SUMMARY
          echo "| Severity | Count |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Critical | $critical |" >> $GITHUB_STEP_SUMMARY
          echo "| High | $high |" >> $GITHUB_STEP_SUMMARY
          echo "| Medium | $medium |" >> $GITHUB_STEP_SUMMARY
          echo "| Low | $low |" >> $GITHUB_STEP_SUMMARY
          echo "| **Score** | **$score** |" >> $GITHUB_STEP_SUMMARY
